{"version":3,"sources":["css/style.jsx","component/InputTask.jsx","component/CurrencyRate.jsx","component/Planitem.jsx","component/Isfinishedjob.jsx","App.js","api/getForex.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","Wrapper","div","Title","p","Totalwrapper","TotalLeft","TotalRight","TotalItem","span","InputTask","addPlan","useState","task","setTask","enterPrice","setVEnterPrice","currency","setCurrency","showCCY","setShowCCY","addPlanHandler","getval","price","console","log","isNaN","alert","id","Date","now","finished","plan","className","type","placeholder","value","onChange","e","target","onClick","preventDefault","map","index","val","CurrencyRate","rate","RUB_CNY","RUB","previous","toFixed","RUB_USD","USD","CNY_USD","classNames","require","PlanList","clickPlan","CNY","CheckClass","checked","Isfinishedjob","isfinished","job","formatMoney","toPrecision","sum_CNY","sum_RUB","sum_USD","item","reduce","pre","next","App","setRate","list","setList","finishedJob","filter","UnfinishedJob","useEffect","fetch","then","response","json","resolve","forexHandler","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2876b38d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// inputTask\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  background-color: rgb(220, 220, 220);\r\n  outline: none;\r\n  border-radius: 5px;\r\n  padding: 5 30px;\r\n  height: 30px;\r\n  display: block;\r\n  width: 100px;\r\n  color: rgb(37, 32, 32);\r\n  border: none;\r\n`;\r\n// isFinished\r\nexport const Wrapper = styled.div`\r\n  clear: both;\r\n  margin-bottom: 30px;\r\n`;\r\nexport const Title = styled.p`\r\n  text-align: left;\r\n  padding: 8px 0;\r\n`;\r\nexport const Totalwrapper = styled.div`\r\n  display: flex;\r\n  padding: 8px 0;\r\n`;\r\nexport const TotalLeft = styled.div`\r\n  text-align: left;\r\n  flex: 1;\r\n`;\r\nexport const TotalRight = styled.div`\r\n  text-align: center;\r\n`;\r\nexport const TotalItem = styled.span`\r\n  margin: 0 30px;\r\n  display: inline-block;\r\n`;\r\n","import { useState } from \"react\";\r\nimport { Button } from \"../css/style\";\r\n\r\nexport default function InputTask({ addPlan }) {\r\n  // 组件状态\r\n  const currencies = [\"RUB\", \"CNY\", \"USD\"];\r\n  const [task, setTask] = useState(\"\");\r\n  const [enterPrice, setVEnterPrice] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"\");\r\n\r\n  const [showCCY, setShowCCY] = useState(false);\r\n\r\n  const clickCCY = (val) => {\r\n    // 显示隐藏\r\n    setShowCCY(false);\r\n    // 选择货币类型\r\n    setCurrency(val);\r\n  };\r\n  const clearState = () => {\r\n    setTask(\"\");\r\n    setVEnterPrice(\"\");\r\n    setCurrency(\"\");\r\n  };\r\n  function addPlanHandler() {\r\n    let price = enterPrice * 1; //当前填入价格\r\n    let getval = {};\r\n    console.log(task, enterPrice, currency);\r\n    if (\r\n      typeof price !== \"number\" ||\r\n      isNaN(price) ||\r\n      task === \"\" ||\r\n      price === 0 ||\r\n      currency === \"\"\r\n    ) {\r\n      return alert(\"输入错误，请重新输入！\");\r\n    }\r\n    getval = {\r\n      id: Date.now(),\r\n      finished: false,\r\n      plan: task,\r\n      price,\r\n      currency,\r\n    };\r\n    // // 添加\r\n    addPlan(getval);\r\n    // 重置\r\n    clearState();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Task-header\">\r\n      <div className=\"left\">\r\n        <input\r\n          className=\"task\"\r\n          type=\"text\"\r\n          placeholder=\"任务\"\r\n          value={task}\r\n          onChange={(e) => {\r\n            setTask(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          className=\"price\"\r\n          type=\"text\"\r\n          placeholder=\"价格\"\r\n          value={enterPrice}\r\n          onChange={(e) => {\r\n            setVEnterPrice(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"select-box\">\r\n        <input\r\n          className=\"currency\"\r\n          value={currency}\r\n          onChange={(e) => {\r\n            setCurrency(e.target.value);\r\n          }}\r\n          type=\"text\"\r\n          placeholder=\"货币类型\"\r\n        />\r\n\r\n        <span\r\n          className=\"icon\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            showCCY ? setShowCCY(false) : setShowCCY(true);\r\n          }}\r\n        >\r\n          ▽\r\n        </span>\r\n        {showCCY ? (\r\n          <ul className=\"select-CCY\">\r\n            {currencies.map((currency, index) => (\r\n              <li\r\n                className=\"ccy-item\"\r\n                key={index}\r\n                onClick={() => {\r\n                  clickCCY(currency);\r\n                }}\r\n              >\r\n                {currency}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <Button\r\n        className=\"add\"\r\n        onClick={() => {\r\n          addPlanHandler();\r\n        }}\r\n      >\r\n        添加\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","export default function CurrencyRate({ rate }) {\r\n  // 人民币=>卢布\r\n\r\n  let RUB_CNY = rate.RUB.previous.toFixed(3);\r\n  // 美元=>卢布\r\n\r\n  let RUB_USD = ((1 / rate.USD.previous) * rate.RUB.previous).toFixed(3);\r\n  // 美元=>人民币\r\n\r\n  let CNY_USD = (1 / rate.USD.previous).toFixed(3);\r\n  return (\r\n    <div className=\"rate-box\">\r\n      {/* <span className=\"currency-rate\">{RUB_CNY(rate)}₽/￥</span> */}\r\n      <span className=\"currency-rate\">{RUB_CNY} ₽/￥</span>\r\n      <span className=\"currency-rate\">{RUB_USD} ₽/$</span>\r\n      <span className=\"currency-rate\">{CNY_USD} ￥/$</span>\r\n    </div>\r\n  );\r\n}\r\n","var classNames = require(\"classnames\");\r\n\r\nexport default function PlanList({\r\n  clickPlan,\r\n  finished,\r\n  id,\r\n  plan,\r\n  RUB,\r\n  CNY,\r\n  USD,\r\n}) {\r\n  // 组件状态\r\n  function clickCheckbox() {\r\n    //点击完成和未完成\r\n    clickPlan(id);\r\n  }\r\n  let CheckClass = classNames({\r\n    \"Plan-text\": true,\r\n    \"is-finished\": finished,\r\n  });\r\n\r\n  return (\r\n    <li className=\"plan-item\">\r\n      <input\r\n        className=\"checkbox\"\r\n        type=\"checkbox\"\r\n        checked={finished}\r\n        onChange={clickCheckbox}\r\n      />\r\n      <span className={CheckClass}>{plan}</span>\r\n      <div className=\"plan-money\">\r\n        <span className=\"plan-RUB\">₽{RUB}</span>\r\n        <span className=\"plan-CNY\">￥{CNY}</span>\r\n        <span className=\"plan-USD\">${USD}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","// import styled from \"styled-components\";\r\nimport {\r\n  Wrapper,\r\n  Title,\r\n  Totalwrapper,\r\n  TotalLeft,\r\n  TotalRight,\r\n  TotalItem,\r\n} from \"../css/style\";\r\nimport Planitem from \"./Planitem\";\r\nexport default function Isfinishedjob({ isfinished, job, clickPlan, rate }) {\r\n  // 格式价格\r\n  function formatMoney(price) {\r\n    return price.toPrecision(6);\r\n  }\r\n  // 计算总和\r\n  let sum_CNY = 0;\r\n  let sum_RUB = 0;\r\n  let sum_USD = 0;\r\n  // 人民币\r\n  sum_CNY = job\r\n    .map((item) => {\r\n      return item.CNY * 1;\r\n    })\r\n    .reduce((pre, next) => pre + next);\r\n\r\n  // 卢币\r\n  sum_RUB = job\r\n    .map((item) => {\r\n      return item.RUB * 1;\r\n    })\r\n    .reduce((pre, next) => pre + next);\r\n\r\n  // 美元\r\n  sum_USD = job\r\n    .map((item) => {\r\n      return item.USD * 1;\r\n    })\r\n    .reduce((pre, next) => pre + next);\r\n\r\n  //格式总数\r\n  sum_CNY = formatMoney(sum_CNY);\r\n  sum_RUB = formatMoney(sum_RUB);\r\n  sum_USD = formatMoney(sum_USD);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>{isfinished ? \"已完成:\" : \"计划:\"}</Title>\r\n      <ul>\r\n        {rate.USD &&\r\n          job.map((item) => {\r\n            return (\r\n              <Planitem\r\n                key={item.id}\r\n                {...item}\r\n                clickPlan={clickPlan}\r\n                rate={rate}\r\n              />\r\n            );\r\n          })}\r\n      </ul>\r\n      <Totalwrapper>\r\n        <TotalLeft>{isfinished ? \"一共花了:\" : \"将要花费:\"}</TotalLeft>\r\n\r\n        <TotalRight>\r\n          <TotalItem>₽{sum_RUB}</TotalItem>\r\n          <TotalItem>￥{sum_CNY}</TotalItem>\r\n          <TotalItem>${sum_USD} </TotalItem>\r\n        </TotalRight>\r\n      </Totalwrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import InputTask from \"./component/InputTask\";\nimport CurrencyRate from \"./component/CurrencyRate\";\nimport Isfinishedjob from \"./component/Isfinishedjob\";\nimport \"./App.css\";\nimport \"./css/InputTask.css\";\nimport \"./css/CurrencyRate.css\";\n\nimport getForex from \"./api/getForex\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  // 汇率\n  const [rate, setRate] = useState({});\n  // 任务\n  const [list, setList] = useState([]);\n  // 完成\n  const finishedJob = list.filter((item) => item.finished);\n  // 未完成\n  const UnfinishedJob = list.filter((item) => !item.finished);\n\n  useEffect(() => {\n    getForex().then((resolve) => {\n      console.log(resolve);\n      setRate(resolve);\n    });\n  }, []);\n\n  // 处理汇率\n  let RUB, CNY, USD;\n  function forexHandler(currency, price) {\n    if (currency === \"RUB\") {\n      //货币类型为卢币时\n      CNY = price / rate.RUB.previous;\n      USD = (price / rate.RUB.previous) * rate.USD.previous;\n      RUB = price;\n    } else if (currency === \"CNY\") {\n      //人民币时\n      RUB = price * rate.RUB.previous;\n      USD = price * rate.USD.previous;\n      CNY = price;\n    } else {\n      //美元时\n      RUB = (price / rate.USD.previous) * rate.RUB.previous;\n      CNY = price / rate.USD.previous;\n      USD = price;\n    }\n    // 格式价格\n    CNY = formatMoney(CNY);\n    USD = formatMoney(USD);\n    RUB = formatMoney(RUB);\n  }\n  // 格式价格\n  function formatMoney(price) {\n    return price.toPrecision(6);\n  }\n  //\n  function addPlan(val) {\n    //添加新计划\n    console.log(val);\n    if (val) {\n      const { plan, price, currency, finished, id } = val;\n      // 转换汇率\n      forexHandler(currency, price);\n\n      // 处理完添加任务\n      setList([...list, { plan, currency, finished, id, RUB, CNY, USD }]);\n      console.log(\"list\", list);\n    }\n  }\n  // 完成和未完成\n  function clickPlan(id) {\n    setList(\n      list.map((item) => {\n        if (item.id === id) {\n          return { ...item, finished: !item.finished };\n        } else {\n          return item;\n        }\n      })\n    );\n  }\n  return (\n    <div className=\"App\">\n      {/* 输入组件 */}\n      <InputTask addPlan={addPlan}></InputTask>\n\n      {/* 汇率转换组件 */}\n      {rate.USD && <CurrencyRate rate={rate}></CurrencyRate>}\n\n      {/* 计划组件 */}\n      {UnfinishedJob.length !== 0 && (\n        <Isfinishedjob\n          job={UnfinishedJob}\n          clickPlan={clickPlan}\n          rate={rate}\n          isfinished={false}\n        ></Isfinishedjob>\n      )}\n\n      {/* 已完成组件(复用计划组件) */}\n      {finishedJob.length !== 0 && (\n        <Isfinishedjob\n          job={finishedJob}\n          clickPlan={clickPlan}\n          rate={rate}\n          isfinished={true}\n        ></Isfinishedjob>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","export default function getForex() {\r\n  return fetch(\"https://api.globus.furniture/forex\").then((response) => {\r\n    return response.json();\r\n  });\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}