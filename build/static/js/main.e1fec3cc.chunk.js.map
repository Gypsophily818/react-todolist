{"version":3,"sources":["css/style.jsx","component/InputTask.jsx","component/CurrencyRate.jsx","component/Planitem.jsx","component/Isfinishedjob.jsx","App.js","api/getForex.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","_templateObject","_taggedTemplateLiteral","Wrapper","div","_templateObject2","Title","p","_templateObject3","Totalwrapper","_templateObject4","TotalLeft","_templateObject5","TotalRight","_templateObject6","TotalItem","span","_templateObject7","InputTask","_ref","addPlan","task","setTask","useState","enterPrice","setVEnterPrice","currency","setCurrency","showCCY","setShowCCY","addPlanHandler","price","getval","console","log","isNaN","alert","id","Date","now","finished","plan","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onClick","preventDefault","map","index","val","CurrencyRate","rate","RUB_CNY","RUB","toFixed","RUB_USD","USD","CNY_USD","classNames","require","PlanList","clickPlan","CNY","CheckClass","checked","Isfinishedjob","isfinished","job","formatMoney","toPrecision","sum_CNY","sum_RUB","sum_USD","item","reduce","pre","next","Planitem","App","setRate","list","setList","finishedJob","filter","UnfinishedJob","useEffect","fetch","then","response","json","resolve","forexHandler","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1fec3cc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n// inputTask\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  background-color: rgb(220, 220, 220);\r\n  outline: none;\r\n  border-radius: 5px;\r\n  padding: 5 30px;\r\n  height: 30px;\r\n  display: block;\r\n  width: 100px;\r\n  color: rgb(37, 32, 32);\r\n  border: none;\r\n`;\r\n// isFinished\r\nexport const Wrapper = styled.div`\r\n  clear: both;\r\n  margin-bottom: 30px;\r\n`;\r\nexport const Title = styled.p`\r\n  text-align: left;\r\n  padding: 8px 0;\r\n`;\r\nexport const Totalwrapper = styled.div`\r\n  display: flex;\r\n  padding: 8px 0;\r\n`;\r\nexport const TotalLeft = styled.div`\r\n  text-align: left;\r\n  flex: 1;\r\n`;\r\nexport const TotalRight = styled.div`\r\n  text-align: center;\r\n`;\r\nexport const TotalItem = styled.span`\r\n  margin: 0 30px;\r\n  display: inline-block;\r\n`;\r\n","import { useState } from \"react\";\r\nimport { Button } from \"../css/style\";\r\n\r\nexport default function InputTask({ addPlan }) {\r\n  // 组件状态\r\n  const currencies = [\"RUB\", \"CNY\", \"USD\"];\r\n  const [task, setTask] = useState(\"\");\r\n  const [enterPrice, setVEnterPrice] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"\");\r\n\r\n  const [showCCY, setShowCCY] = useState(false);\r\n\r\n  const clickCCY = (val) => {\r\n    // 显示隐藏\r\n    setShowCCY(false);\r\n    // 选择货币类型\r\n    setCurrency(val);\r\n  };\r\n  const clearState = () => {\r\n    setTask(\"\");\r\n    setVEnterPrice(\"\");\r\n    setCurrency(\"\");\r\n  };\r\n  function addPlanHandler() {\r\n    let price = enterPrice * 1; //当前填入价格\r\n    let getval = {};\r\n    console.log(task, enterPrice, currency);\r\n    if (\r\n      typeof price !== \"number\" ||\r\n      isNaN(price) ||\r\n      task === \"\" ||\r\n      price === 0 ||\r\n      currency === \"\"\r\n    ) {\r\n      return alert(\"输入错误，请重新输入！\");\r\n    }\r\n    getval = {\r\n      id: Date.now(),\r\n      finished: false,\r\n      plan: task,\r\n      price,\r\n      currency,\r\n    };\r\n    // // 添加\r\n    addPlan(getval);\r\n    // 重置\r\n    clearState();\r\n  }\r\n\r\n  return (\r\n    <div className=\"Task-header\">\r\n      <div className=\"left\">\r\n        <input\r\n          className=\"task\"\r\n          type=\"text\"\r\n          placeholder=\"任务\"\r\n          value={task}\r\n          onChange={(e) => {\r\n            setTask(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          className=\"price\"\r\n          type=\"text\"\r\n          placeholder=\"价格\"\r\n          value={enterPrice}\r\n          onChange={(e) => {\r\n            setVEnterPrice(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"select-box\">\r\n        <input\r\n          className=\"currency\"\r\n          value={currency}\r\n          onChange={(e) => {\r\n            setCurrency(e.target.value);\r\n          }}\r\n          type=\"text\"\r\n          placeholder=\"货币类型\"\r\n        />\r\n\r\n        <span\r\n          className=\"icon\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            showCCY ? setShowCCY(false) : setShowCCY(true);\r\n          }}\r\n        >\r\n          ▽\r\n        </span>\r\n        {showCCY ? (\r\n          <ul className=\"select-CCY\">\r\n            {currencies.map((currency, index) => (\r\n              <li\r\n                className=\"ccy-item\"\r\n                key={index}\r\n                onClick={() => {\r\n                  clickCCY(currency);\r\n                }}\r\n              >\r\n                {currency}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <Button\r\n        className=\"add\"\r\n        onClick={() => {\r\n          addPlanHandler();\r\n        }}\r\n      >\r\n        添加\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","export default function CurrencyRate({ rate }) {\r\n  // 人民币=>卢布\r\n  // let RUB_CNY = rate.RUB.previous.toFixed(3);\r\n  // // 美元=>卢布\r\n  // let RUB_USD = ((1 / rate.USD.previous) * rate.RUB.previous).toFixed(3);\r\n  // // 美元=>人民币\r\n  // let CNY_USD = (1 / rate.USD.previous).toFixed(3);\r\n\r\n    // 人民币=>卢布\r\n  let RUB_CNY = rate.RUB.value.toFixed(3)\r\n  // // 美元=>卢布\r\n  let RUB_USD = ((1 / rate.USD.value) * rate.RUB.value).toFixed(3);\r\n   // // 美元=>人民币\r\n  let CNY_USD = (1 / rate.USD.value).toFixed(3);\r\n  return (\r\n    <div className=\"rate-box\">\r\n      {/* <span className=\"currency-rate\">{RUB_CNY(rate)}₽/￥</span> */}\r\n      <span className=\"currency-rate\">{RUB_CNY} ₽/￥</span>\r\n      <span className=\"currency-rate\">{RUB_USD} ₽/$</span>\r\n      <span className=\"currency-rate\">{CNY_USD} ￥/$</span>\r\n    </div>\r\n  );\r\n}\r\n","var classNames = require(\"classnames\");\r\n\r\nexport default function PlanList({\r\n  clickPlan,\r\n  finished,\r\n  id,\r\n  plan,\r\n  RUB,\r\n  CNY,\r\n  USD,\r\n}) {\r\n  // 组件状态\r\n  function clickCheckbox() {\r\n    //点击完成和未完成\r\n    clickPlan(id);\r\n  }\r\n  let CheckClass = classNames({\r\n    \"Plan-text\": true,\r\n    \"is-finished\": finished,\r\n  });\r\n\r\n  return (\r\n    <li className=\"plan-item\">\r\n      <input\r\n        className=\"checkbox\"\r\n        type=\"checkbox\"\r\n        checked={finished}\r\n        onChange={clickCheckbox}\r\n      />\r\n      <span className={CheckClass}>{plan}</span>\r\n      <div className=\"plan-money\">\r\n        <span className=\"plan-RUB\">₽{RUB}</span>\r\n        <span className=\"plan-CNY\">￥{CNY}</span>\r\n        <span className=\"plan-USD\">${USD}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","// import styled from \"styled-components\";\r\nimport {\r\n  Wrapper,\r\n  Title,\r\n  Totalwrapper,\r\n  TotalLeft,\r\n  TotalRight,\r\n  TotalItem,\r\n} from \"../css/style\";\r\nimport Planitem from \"./Planitem\";\r\nexport default function Isfinishedjob({ isfinished, job, clickPlan, rate }) {\r\n  // 格式价格\r\n  function formatMoney(price) {\r\n    return price.toPrecision(6);\r\n  }\r\n  // 计算总和\r\n  let sum_CNY = 0;\r\n  let sum_RUB = 0;\r\n  let sum_USD = 0;\r\n  // 人民币\r\n  sum_CNY = job\r\n    .map((item) => {\r\n      // debugger\r\n      return item.CNY * 1;\r\n    })\r\n    .reduce((pre, next) => pre + next);\r\n\r\n  // 卢币\r\n  sum_RUB = job\r\n    .map((item) => {\r\n      return item.RUB * 1;\r\n    })\r\n    .reduce((pre, next) => pre + next);\r\n\r\n  // 美元\r\n  sum_USD = job\r\n    .map((item) => {\r\n      return item.USD * 1;\r\n    })\r\n    .reduce((pre, next) => pre + next);\r\n\r\n  //格式总数\r\n  sum_CNY = formatMoney(sum_CNY);\r\n  sum_RUB = formatMoney(sum_RUB);\r\n  sum_USD = formatMoney(sum_USD);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>{isfinished ? \"已完成:\" : \"计划:\"}</Title>\r\n      <ul>\r\n        {rate.USD &&\r\n          job.map((item) => {\r\n            return (\r\n              <Planitem\r\n                key={item.id}\r\n                {...item}\r\n                clickPlan={clickPlan}\r\n                rate={rate}\r\n              />\r\n            );\r\n          })}\r\n      </ul>\r\n      <Totalwrapper>\r\n        <TotalLeft>{isfinished ? \"一共花了:\" : \"将要花费:\"}</TotalLeft>\r\n\r\n        <TotalRight>\r\n          <TotalItem>₽{sum_RUB}</TotalItem>\r\n          <TotalItem>￥{sum_CNY}</TotalItem>\r\n          <TotalItem>${sum_USD} </TotalItem>\r\n        </TotalRight>\r\n      </Totalwrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import InputTask from \"./component/InputTask\";\r\nimport CurrencyRate from \"./component/CurrencyRate\";\r\nimport Isfinishedjob from \"./component/Isfinishedjob\";\r\nimport \"./App.css\";\r\nimport \"./css/InputTask.css\";\r\nimport \"./css/CurrencyRate.css\";\r\n\r\nimport getForex from \"./api/getForex\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  // 汇率\r\n  const [rate, setRate] = useState({});\r\n  // 任务\r\n  const [list, setList] = useState([]);\r\n  // 完成\r\n  const finishedJob = list.filter((item) => item.finished);\r\n  // 未完成\r\n  const UnfinishedJob = list.filter((item) => !item.finished);\r\n\r\n  useEffect(() => {\r\n    getForex().then((resolve) => {\r\n      console.log(resolve);\r\n      setRate(resolve);\r\n    });\r\n  }, []);\r\n\r\n  // 处理汇率\r\n  let RUB, CNY, USD;\r\n  function forexHandler(currency, price) {\r\n    switch (currency) {\r\n      case \"RUB\": //货币类型为卢币\r\n        CNY = price / rate.RUB.value;\r\n        USD = (price / rate.RUB.value) * rate.USD.value;\r\n        RUB = price;\r\n        break;\r\n      case \"USD\": //美元\r\n        RUB = (price / rate.USD.value) * rate.RUB.value;\r\n        CNY = price / rate.USD.value;\r\n        USD = price;\r\n        break;\r\n      case \"CNY\": //人民币\r\n        RUB = price * rate.RUB.value;\r\n        USD = price * rate.USD.value;\r\n        CNY = price;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    // 格式价格\r\n    CNY = formatMoney(CNY);\r\n    USD = formatMoney(USD);\r\n    RUB = formatMoney(RUB);\r\n  }\r\n  // 格式价格\r\n  function formatMoney(price) {\r\n    return price.toPrecision(6);\r\n  }\r\n  //\r\n  function addPlan(val) {\r\n    //添加新计划\r\n    console.log(val);\r\n    if (val) {\r\n      const { plan, price, currency, finished, id } = val;\r\n      // 转换汇率\r\n      forexHandler(currency, price);\r\n\r\n      // 处理完添加任务\r\n      setList([...list, { plan, currency, finished, id, RUB, CNY, USD }]);\r\n      console.log(\"list\", list);\r\n    }\r\n  }\r\n  // 完成和未完成\r\n  function clickPlan(id) {\r\n    setList(\r\n      list.map((item) => {\r\n        if (item.id === id) {\r\n          return { ...item, finished: !item.finished };\r\n        } else {\r\n          return item;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      {/* 输入组件 */}\r\n      <InputTask addPlan={addPlan}></InputTask>\r\n\r\n      {/* 汇率转换组件 */}\r\n      {rate.USD && <CurrencyRate rate={rate}></CurrencyRate>}\r\n\r\n      {/* 计划组件 */}\r\n      {UnfinishedJob.length !== 0 && (\r\n        <Isfinishedjob\r\n          job={UnfinishedJob}\r\n          clickPlan={clickPlan}\r\n          rate={rate}\r\n          isfinished={false}\r\n        ></Isfinishedjob>\r\n      )}\r\n\r\n      {/* 已完成组件(复用计划组件) */}\r\n      {finishedJob.length !== 0 && (\r\n        <Isfinishedjob\r\n          job={finishedJob}\r\n          clickPlan={clickPlan}\r\n          rate={rate}\r\n          isfinished={true}\r\n        ></Isfinishedjob>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function getForex() {\r\n  // return fetch(\"https://api.globus.furniture/forex\").then((response) => {\r\n  return fetch(\"/forex\").then((response) => {\r\n    return response.json();\r\n  });\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}